{"version":3,"sources":["../node_modules/@uniswap/widgets/dist/locales lazy /^/.*/.js$/ groupOptions: {} namespace object","hooks/useNetworkTokenBalances.ts","components/Tokens/TokenDetails/NetworkBalance.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Tokens/TokenDetails/FooterBalanceSummary.tsx","utils/formatChartTimes.ts","components/Tokens/TokenDetails/PriceChart.tsx","components/Tokens/TokenDetails/Resource.tsx","assets/svg/share.svg","components/Tokens/TokenDetails/ShareButton.tsx","components/Tokens/TokenDetails/TokenDetail.tsx","components/Tokens/TokenDetails/LoadingTokenDetail.tsx","components/TokenSafety/TokenSafetyMessage.tsx","hooks/useTokenDetailPageQuery.tsx","theme/token-details-widget-theme.ts","utils/token-details-widget-config.ts","pages/TokenDetails/index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useNetworkTokenBalances","address","useState","data","setData","error","setError","loading","setLoading","query","gql","useEffect","FAKE_TOKEN_NETWORK_BALANCES","SupportedChainId","ARBITRUM_ONE","CurrencyAmount","fromRawAmount","Token","MAINNET","RINKEBY","fetchNetworkTokenBalances","a","waitRandom","min","max","setTimeout","Math","round","random","console","log","catch","finally","Balance","styled","div","BalanceItem","BalanceRow","Logo","img","Network","span","color","NetworkBalanceContainer","NetworkBalance","logoUrl","balance","tokenSymbol","fiatValue","label","networkColor","theme","useTheme","src","textPrimary","BalancesCard","backgroundSurface","ErrorState","textSecondary","ErrorText","NetworkBalancesSection","TotalBalanceSection","backgroundOutline","TotalBalance","TotalBalanceItem","BalanceSummary","networkBalances","totalBalance","useToken","symbol","connectedChainId","useWeb3React","chainId","getChainInfoOrDefault","size","PLACEHOLDER_NAV_FOOTER_HEIGHT","BalanceFooter","BalanceValue","BalanceTotal","BalanceInfo","FakeFooterNavBar","backgroundBackdrop","FiatValue","SMALLEST_MOBILE_MEDIA_BREAKPOINT","NetworkBalancesLabel","SwapButton","button","accentAction","TotalBalancesSection","LoadingState","TopBalanceLoadBubble","LoadingBubble","BottomBalanceLoadBubble","FooterBalanceSummary","showMultipleBalances","onClick","window","location","href","createTimeFormatter","timestamp","locale","options","Date","valueOf","toLocaleTimeString","hourFormatter","hour","minute","hour12","dayHourFormatter","month","day","createDateFormatter","toLocaleDateString","monthDayFormatter","monthYearFormatter","year","monthYearDayFormatter","monthFormatter","weekFormatter","weekday","TIME_DISPLAYS","TimePeriod","week","all","StyledUpArrow","ArrowUpRight","accentSuccess","StyledDownArrow","ArrowDownRight","accentFailure","ChartHeader","TokenPrice","DeltaContainer","ArrowCell","TimeOptionsWrapper","TimeOptionsContainer","TimeButton","active","backgroundInteractive","OPACITY_HOVER","getTicks","startTimestamp","endTimestamp","numTicks","Array","from","length","v","i","margin","PriceChart","width","height","useAtom","filterTimeAtom","timePeriod","setTimePeriod","useActiveLocale","pricePoints","startingPrice","endingPrice","initialState","pricePoint","xCoordinate","selected","setSelected","graphWidth","graphHeight","graphInnerHeight","timeScale","scaleLinear","domain","range","rdScale","prices","x","value","getPriceBounds","handleHover","useCallback","event","localPoint","x0","invert","index","bisect","d0","d1","tickFormat","tickFormatter","crosshairDateFormatter","ticks","start","current","delta","isPositive","sign","formattedDelta","toFixed","getDelta","arrow","crosshairEdgeMax","crosshairAtEdge","LineChart","getX","p","getY","marginTop","curve","curveBasis","undefined","strokeWidth","AxisBottom","scale","stroke","tickStroke","tickLength","tickTransform","tickValues","top","tickLabelProps","fill","fontSize","textAnchor","transform","y","Line","to","pointerEvents","strokeDasharray","GlyphCircle","left","accentActive","hideTicks","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","display","ResourceLink","ExternalLink","darken","Resource","name","link","_path","_excluded","_extends","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgShare","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","strokeLinecap","strokeLinejoin","d","ForwardRef","ShareButtonDisplay","Share","ShareIcon","ClickableStyle","open","OPACITY_CLICK","ShareActions","Z_INDEX","dropdown","flyoutDropShadow","ShareAction","opacify","darkMode","colors","gray200","gray300","ShareButton","tokenInfo","node","useRef","useModalIsOpen","ApplicationModal","SHARE","toggleShare","useToggleModal","useOnClickOutside","positionX","screen","positionY","copyHelperRef","forceCopy","iconPosition","toCopy","tokenName","AboutSection","AboutHeader","BreadcrumbNavLink","Link","textTertiary","ContractAddress","ContractAddressSection","Contract","ChartContainer","Stat","StatPrice","StatsSection","StatPair","TokenNameCell","TokenActions","TokenInfoContainer","TokenSymbol","TopArea","ResourcesContainer","NetworkBadge","backgroundColor","FavoriteIcon","Heart","isFavorited","LoadedTokenDetail","token","currency","useCurrency","useAtomValue","favoritesAtom","includes","toggleFavorite","useToggleFavorite","warning","checkWarning","navigate","useNavigate","isUserAddedToken","useIsUserAddedToken","warningModalOpen","setWarningModalOpen","handleDismissWarning","chainInfo","getChainInfo","networkLabel","networkBadgebackgroundColor","CurrencyLogo","ParentSize","TokenSafetyModal","isOpen","tokenAddress","onCancel","onContinue","LoadingChartContainer","LoadingDetailBubble","TitleLoadingBubble","SquareLoadingBubble","PriceLoadingBubble","LongLoadingBubble","HalfLoadingBubble","IconLoadingBubble","StatLoadingBubble","StatsLoadingContainer","ChartAnimation","Space","heightSize","Wave","LoadingTokenDetail","Label","TitleRow","Title","Text","DetailsRow","TokenWarningMessage","useTokenWarningColor","level","getWarningCopy","heading","description","canProceed","marginLeft","message","TOKEN_SAFETY_ARTICLE","Currency","FAKE_TOKEN_DETAIL_PAGE_QUERY_RESULT","priceHistory","USD","priceInCurrency","links","url","displayable_name","marketCap","volume","useTokenDetailPageQuery","fetchTokenDetails","addresses","isAddress","LIGHT_THEME","container","interactive","accent","pink400","dialog","primary","gray900","secondary","gray500","onInteractive","success","green400","gold200","red400","DARK_THEME","blue400","white","greenVibrant","RPC_URL_MAP","RPC_URLS","reduce","acc","cur","Footer","LARGE_MEDIA_BREAKPOINT","TokenDetailsLayout","MAX_WIDTH_MEDIA_BREAKPOINT","SMALL_MEDIA_BREAKPOINT","MOBILE_MEDIA_BREAKPOINT","RightPanel","TokenDetails","tokenDetail","useParams","useIsDarkMode","widgetTheme","useMemo","onTxSubmit","onTxSuccess","onTxFail","tokenWarning","NetworkBalances","networkData","provider","chainsToList","chainIds","L1_CHAIN_IDS","L2_CHAIN_IDS","TESTNET_CHAIN_IDS","filter","balancesByNetwork","toSignificant","defaultChainId","defaultInputTokenAddress","defaultOutputTokenAddress","hideConnectionUI","jsonRpcUrlMap","routerUrl"],"mappings":"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","file":"static/js/6.0598894d.chunk.js","sourcesContent":["var map = {\n\t\"./af-ZA.js\": [\n\t\t1652,\n\t\t43\n\t],\n\t\"./ar-SA.js\": [\n\t\t1653,\n\t\t44\n\t],\n\t\"./ca-ES.js\": [\n\t\t1654,\n\t\t45\n\t],\n\t\"./cs-CZ.js\": [\n\t\t1655,\n\t\t46\n\t],\n\t\"./da-DK.js\": [\n\t\t1656,\n\t\t47\n\t],\n\t\"./de-DE.js\": [\n\t\t1657,\n\t\t48\n\t],\n\t\"./el-GR.js\": [\n\t\t1658,\n\t\t49\n\t],\n\t\"./en-US.js\": [\n\t\t1659,\n\t\t50\n\t],\n\t\"./es-ES.js\": [\n\t\t1660,\n\t\t51\n\t],\n\t\"./fi-FI.js\": [\n\t\t1661,\n\t\t52\n\t],\n\t\"./fr-FR.js\": [\n\t\t1662,\n\t\t53\n\t],\n\t\"./he-IL.js\": [\n\t\t1663,\n\t\t54\n\t],\n\t\"./hu-HU.js\": [\n\t\t1664,\n\t\t55\n\t],\n\t\"./id-ID.js\": [\n\t\t1665,\n\t\t56\n\t],\n\t\"./it-IT.js\": [\n\t\t1666,\n\t\t57\n\t],\n\t\"./ja-JP.js\": [\n\t\t1667,\n\t\t58\n\t],\n\t\"./ko-KR.js\": [\n\t\t1668,\n\t\t59\n\t],\n\t\"./nl-NL.js\": [\n\t\t1669,\n\t\t60\n\t],\n\t\"./no-NO.js\": [\n\t\t1670,\n\t\t61\n\t],\n\t\"./pl-PL.js\": [\n\t\t1671,\n\t\t62\n\t],\n\t\"./pseudo.js\": [\n\t\t1672,\n\t\t63\n\t],\n\t\"./pt-BR.js\": [\n\t\t1673,\n\t\t64\n\t],\n\t\"./pt-PT.js\": [\n\t\t1674,\n\t\t65\n\t],\n\t\"./ro-RO.js\": [\n\t\t1675,\n\t\t66\n\t],\n\t\"./ru-RU.js\": [\n\t\t1676,\n\t\t67\n\t],\n\t\"./sr-SP.js\": [\n\t\t1677,\n\t\t68\n\t],\n\t\"./sv-SE.js\": [\n\t\t1678,\n\t\t69\n\t],\n\t\"./sw-TZ.js\": [\n\t\t1679,\n\t\t70\n\t],\n\t\"./tr-TR.js\": [\n\t\t1680,\n\t\t71\n\t],\n\t\"./uk-UA.js\": [\n\t\t1681,\n\t\t72\n\t],\n\t\"./vi-VN.js\": [\n\t\t1682,\n\t\t73\n\t],\n\t\"./zh-CN.js\": [\n\t\t1683,\n\t\t74\n\t],\n\t\"./zh-TW.js\": [\n\t\t1684,\n\t\t75\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1494;\nmodule.exports = webpackAsyncContext;","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { SupportedChainId } from 'constants/chains'\nimport { gql } from 'graphql-request'\nimport { useEffect, useState } from 'react'\n\ntype NetworkTokenBalancesMap = Partial<Record<SupportedChainId, CurrencyAmount<Token>>>\n\ninterface useNetworkTokenBalancesResult {\n  data: NetworkTokenBalancesMap | null\n  error: null | string\n  loading: boolean\n}\n\ninterface useNetworkTokenBalancesArgs {\n  address: string\n}\n\nexport function useNetworkTokenBalances({ address }: useNetworkTokenBalancesArgs): useNetworkTokenBalancesResult {\n  const [data, setData] = useState<NetworkTokenBalancesMap | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  const query = gql``\n\n  useEffect(() => {\n    const FAKE_TOKEN_NETWORK_BALANCES = {\n      [SupportedChainId.ARBITRUM_ONE]: CurrencyAmount.fromRawAmount(\n        new Token(SupportedChainId.ARBITRUM_ONE, address, 18),\n        10e18\n      ),\n      [SupportedChainId.MAINNET]: CurrencyAmount.fromRawAmount(new Token(SupportedChainId.MAINNET, address, 18), 1e18),\n      [SupportedChainId.RINKEBY]: CurrencyAmount.fromRawAmount(new Token(SupportedChainId.RINKEBY, address, 9), 10e18),\n    }\n\n    const fetchNetworkTokenBalances = async (address: string): Promise<NetworkTokenBalancesMap | void> => {\n      const waitRandom = (min: number, max: number): Promise<void> =>\n        new Promise((resolve) => setTimeout(resolve, min + Math.round(Math.random() * Math.max(0, max - min))))\n      try {\n        console.log('useNetworkTokenBalances.fetchNetworkTokenBalances', query)\n        setLoading(true)\n        setError(null)\n        console.log('useNetworkTokenBalances.fetchNetworkTokenBalances', address)\n        await waitRandom(250, 2000)\n        if (Math.random() < 0.05) {\n          throw new Error('fake error')\n        }\n        return FAKE_TOKEN_NETWORK_BALANCES\n      } catch (e) {\n        setError('something went wrong')\n      } finally {\n        setLoading(false)\n      }\n    }\n    setLoading(true)\n    setError(null)\n    fetchNetworkTokenBalances(address)\n      .then((data) => {\n        if (data) setData(data)\n      })\n      .catch((e) => setError(e))\n      .finally(() => setLoading(false))\n  }, [address, query])\n\n  return {\n    data,\n    error,\n    loading,\n  }\n}\n","import styled, { useTheme } from 'styled-components/macro'\n\nconst Balance = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  line-height: 20px;\n`\nconst BalanceItem = styled.div`\n  display: flex;\n`\nconst BalanceRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst Logo = styled.img`\n  height: 32px;\n  width: 32px;\n  margin-right: 8px;\n`\nconst Network = styled.span<{ color: string }>`\n  font-size: 12px;\n  line-height: 16px;\n  font-weight: 500;\n  color: ${({ color }) => color};\n`\nconst NetworkBalanceContainer = styled.div`\n  display: flex;\n  padding-top: 16px;\n  align-items: center;\n`\n\nexport default function NetworkBalance({\n  logoUrl,\n  balance,\n  tokenSymbol,\n  fiatValue,\n  label,\n  networkColor,\n}: {\n  logoUrl: string\n  balance: string\n  tokenSymbol: string\n  fiatValue: string | number\n  label: string\n  networkColor: string | undefined\n}) {\n  const theme = useTheme()\n  return (\n    <NetworkBalanceContainer>\n      <Logo src={logoUrl} />\n      <Balance>\n        <BalanceRow>\n          <BalanceItem>\n            {balance}&nbsp;{tokenSymbol}\n          </BalanceItem>\n          <BalanceItem>${fiatValue}</BalanceItem>\n        </BalanceRow>\n        <Network color={networkColor ?? theme.textPrimary}>{label}</Network>\n      </Balance>\n    </NetworkBalanceContainer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { getChainInfoOrDefault } from 'constants/chainInfo'\nimport { useToken } from 'hooks/Tokens'\nimport { useNetworkTokenBalances } from 'hooks/useNetworkTokenBalances'\nimport { AlertTriangle } from 'react-feather'\nimport styled, { useTheme } from 'styled-components/macro'\n\nimport NetworkBalance from './NetworkBalance'\n\nconst BalancesCard = styled.div`\n  width: 100%;\n  height: fit-content;\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 12px;\n  line-height: 16px;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  border-radius: 16px;\n`\nconst ErrorState = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: ${({ theme }) => theme.textSecondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n`\nconst ErrorText = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n`\nconst NetworkBalancesSection = styled.div`\n  height: fit-content;\n`\nconst TotalBalanceSection = styled.div`\n  height: fit-content;\n  border-bottom: 1px solid ${({ theme }) => theme.backgroundOutline};\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n`\nconst TotalBalance = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n  line-height: 28px;\n  margin-top: 12px;\n  align-items: center;\n`\nconst TotalBalanceItem = styled.div`\n  display: flex;\n`\n\nexport default function BalanceSummary({\n  address,\n  networkBalances,\n  totalBalance,\n}: {\n  address: string\n  networkBalances: (JSX.Element | null)[] | null\n  totalBalance: number\n}) {\n  const theme = useTheme()\n  const tokenSymbol = useToken(address)?.symbol\n  const { loading, error, data } = useNetworkTokenBalances({ address })\n\n  const { chainId: connectedChainId } = useWeb3React()\n\n  const { label: connectedLabel, logoUrl: connectedLogoUrl } = getChainInfoOrDefault(connectedChainId)\n  const connectedFiatValue = 1\n  const multipleBalances = true // for testing purposes\n\n  if (loading) return null\n  return (\n    <BalancesCard>\n      {error ? (\n        <ErrorState>\n          <AlertTriangle size={24} />\n          <ErrorText>\n            <Trans>There was an error loading your {tokenSymbol} balance</Trans>\n          </ErrorText>\n        </ErrorState>\n      ) : multipleBalances ? (\n        <>\n          <TotalBalanceSection>\n            Your balance across all networks\n            <TotalBalance>\n              <TotalBalanceItem>{`${totalBalance} ${tokenSymbol}`}</TotalBalanceItem>\n              <TotalBalanceItem>$4,210.12</TotalBalanceItem>\n            </TotalBalance>\n          </TotalBalanceSection>\n          <NetworkBalancesSection>Your balances by network</NetworkBalancesSection>\n          {data && networkBalances}\n        </>\n      ) : (\n        <>\n          Your balance on {connectedLabel}\n          <NetworkBalance\n            logoUrl={connectedLogoUrl}\n            balance={'1'}\n            tokenSymbol={tokenSymbol ?? 'XXX'}\n            fiatValue={connectedFiatValue}\n            label={connectedLabel}\n            networkColor={theme.textPrimary}\n          />\n        </>\n      )}\n    </BalancesCard>\n  )\n}\n","import { useToken } from 'hooks/Tokens'\nimport { useNetworkTokenBalances } from 'hooks/useNetworkTokenBalances'\nimport { useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport styled from 'styled-components/macro'\n\nimport { SMALLEST_MOBILE_MEDIA_BREAKPOINT } from '../constants'\nimport { LoadingBubble } from '../loading'\n\nconst PLACEHOLDER_NAV_FOOTER_HEIGHT = '56px'\nconst BalanceFooter = styled.div`\n  height: fit-content;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  border-radius: 20px 20px 0px 0px;\n  padding: 12px 16px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  width: 100%;\n  color: ${({ theme }) => theme.textSecondary};\n  position: fixed;\n  left: 0;\n  bottom: ${PLACEHOLDER_NAV_FOOTER_HEIGHT};\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n`\nconst BalanceValue = styled.div`\n  font-size: 20px;\n  line-height: 28px;\n  display: flex;\n  gap: 8px;\n`\nconst BalanceTotal = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  color: ${({ theme }) => theme.textPrimary};\n`\nconst BalanceInfo = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n`\nconst FakeFooterNavBar = styled.div`\n  position: fixed;\n  bottom: 0px;\n  left: 0px;\n  background-color: ${({ theme }) => theme.backgroundBackdrop};\n  height: ${PLACEHOLDER_NAV_FOOTER_HEIGHT};\n  width: 100%;\n  align-items: flex-end;\n  padding: 20px 8px;\n  font-size: 10px;\n`\nconst FiatValue = styled.span`\n  display: flex;\n  align-self: flex-end;\n  font-size: 12px;\n  line-height: 24px;\n\n  @media only screen and (max-width: ${SMALLEST_MOBILE_MEDIA_BREAKPOINT}) {\n    line-height: 16px;\n  }\n`\nconst NetworkBalancesSection = styled.div`\n  height: fit-content;\n  border-top: 1px solid ${({ theme }) => theme.backgroundOutline};\n  display: flex;\n  flex-direction: column;\n  padding: 16px 0px 8px 0px;\n  margin-top: 16px;\n  color: ${({ theme }) => theme.textPrimary};\n`\nconst NetworkBalancesLabel = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\nconst SwapButton = styled.button`\n  background-color: ${({ theme }) => theme.accentAction};\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  border: none;\n  color: ${({ theme }) => theme.textPrimary};\n  padding: 12px 16px;\n  width: 120px;\n  height: 44px;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n`\nconst TotalBalancesSection = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.textSecondary};\n  justify-content: space-between;\n  align-items: center;\n`\nconst ViewAll = styled.span`\n  display: flex;\n  color: ${({ theme }) => theme.accentAction};\n  font-size: 14px;\n  line-height: 20px;\n  cursor: pointer;\n`\nconst ErrorState = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-right: 8px;\n`\nconst LoadingState = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`\nconst TopBalanceLoadBubble = styled(LoadingBubble)`\n  height: 12px;\n  width: 172px;\n`\nconst BottomBalanceLoadBubble = styled(LoadingBubble)`\n  height: 16px;\n  width: 188px;\n`\nconst ErrorText = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport default function FooterBalanceSummary({\n  address,\n  networkBalances,\n  totalBalance,\n}: {\n  address: string\n  networkBalances: (JSX.Element | null)[] | null\n  totalBalance: number\n}) {\n  const tokenSymbol = useToken(address)?.symbol\n  const [showMultipleBalances, setShowMultipleBalances] = useState(false)\n  const multipleBalances = false // for testing purposes\n  const networkNameIfOneBalance = 'Ethereum' // for testing purposes\n  const { loading, error } = useNetworkTokenBalances({ address })\n  return (\n    <BalanceFooter>\n      <TotalBalancesSection>\n        {loading ? (\n          <LoadingState>\n            <TopBalanceLoadBubble></TopBalanceLoadBubble>\n            <BottomBalanceLoadBubble></BottomBalanceLoadBubble>\n          </LoadingState>\n        ) : error ? (\n          <ErrorState>\n            <AlertTriangle size={17} />\n            <ErrorText>There was an error fetching your balance</ErrorText>\n          </ErrorState>\n        ) : (\n          <BalanceInfo>\n            {multipleBalances ? 'Balance on all networks' : `Your balance on ${networkNameIfOneBalance}`}\n            <BalanceTotal>\n              <BalanceValue>\n                {totalBalance} {tokenSymbol}\n              </BalanceValue>\n              <FiatValue>($107, 610.04)</FiatValue>\n            </BalanceTotal>\n            {multipleBalances && (\n              <ViewAll onClick={() => setShowMultipleBalances(!showMultipleBalances)}>\n                {showMultipleBalances ? 'Hide' : 'View'} all balances\n              </ViewAll>\n            )}\n          </BalanceInfo>\n        )}\n        <SwapButton onClick={() => (window.location.href = 'https://app.uniswap.org/#/swap')}>Swap</SwapButton>\n      </TotalBalancesSection>\n      {showMultipleBalances && (\n        <NetworkBalancesSection>\n          <NetworkBalancesLabel>Your balances by network</NetworkBalancesLabel> {networkBalances}\n        </NetworkBalancesSection>\n      )}\n      <FakeFooterNavBar>**leaving space for updated nav footer**</FakeFooterNavBar>\n    </BalanceFooter>\n  )\n}\n","import { NumberValue } from 'd3'\n\nconst createTimeFormatter = (timestamp: NumberValue, locale: string, options: Intl.DateTimeFormatOptions) =>\n  new Date(timestamp.valueOf() * 1000).toLocaleTimeString(locale, options)\n\nexport const hourFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createTimeFormatter(timestamp, locale, {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  })\n\nexport const dayHourFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createTimeFormatter(timestamp, locale, {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n  })\n\nconst createDateFormatter = (timestamp: NumberValue, locale: string, options: Intl.DateTimeFormatOptions) =>\n  new Date(timestamp.valueOf() * 1000).toLocaleDateString(locale, options)\n\nexport const monthDayFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createDateFormatter(timestamp, locale, {\n    month: 'long',\n    day: 'numeric',\n  })\n\nexport const monthYearFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createDateFormatter(timestamp, locale, {\n    month: 'long',\n    year: 'numeric',\n  })\n\nexport const monthYearDayFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createDateFormatter(timestamp, locale, {\n    month: 'short',\n    year: 'numeric',\n    day: 'numeric',\n  })\n\nexport const monthFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createDateFormatter(timestamp, locale, { month: 'long' })\n\nexport const weekFormatter = (locale: string) => (timestamp: NumberValue) =>\n  createDateFormatter(timestamp, locale, { weekday: 'long' })\n","import { AxisBottom, TickFormatter } from '@visx/axis'\nimport { localPoint } from '@visx/event'\nimport { EventType } from '@visx/event/lib/types'\nimport { GlyphCircle } from '@visx/glyph'\nimport { Line } from '@visx/shape'\nimport { filterTimeAtom } from 'components/Tokens/state'\nimport { bisect, curveBasis, NumberValue, scaleLinear } from 'd3'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { TimePeriod } from 'hooks/useExplorePageQuery'\nimport { useAtom } from 'jotai'\nimport { useCallback, useState } from 'react'\nimport { ArrowDownRight, ArrowUpRight } from 'react-feather'\nimport styled, { useTheme } from 'styled-components/macro'\nimport { OPACITY_HOVER } from 'theme'\nimport {\n  dayHourFormatter,\n  hourFormatter,\n  monthDayFormatter,\n  monthFormatter,\n  monthYearDayFormatter,\n  monthYearFormatter,\n  weekFormatter,\n} from 'utils/formatChartTimes'\n\nimport data from '../../Charts/data.json'\nimport LineChart from '../../Charts/LineChart'\n\n// TODO: This should be combined with the logic in TimeSelector.\nconst TIME_DISPLAYS: [TimePeriod, string][] = [\n  [TimePeriod.hour, '1H'],\n  [TimePeriod.day, '1D'],\n  [TimePeriod.week, '1W'],\n  [TimePeriod.month, '1M'],\n  [TimePeriod.year, '1Y'],\n  [TimePeriod.all, 'All'],\n]\n\ntype PricePoint = { value: number; timestamp: number }\n\nfunction getPriceBounds(pricePoints: PricePoint[]): [number, number] {\n  const prices = pricePoints.map((x) => x.value)\n  const min = Math.min(...prices)\n  const max = Math.max(...prices)\n  return [min, max]\n}\n\nconst StyledUpArrow = styled(ArrowUpRight)`\n  color: ${({ theme }) => theme.accentSuccess};\n`\nconst StyledDownArrow = styled(ArrowDownRight)`\n  color: ${({ theme }) => theme.accentFailure};\n`\n\nfunction getDelta(start: number, current: number) {\n  const delta = (current / start - 1) * 100\n  const isPositive = Math.sign(delta) > 0\n\n  const formattedDelta = delta.toFixed(2) + '%'\n  if (isPositive) {\n    return ['+' + formattedDelta, <StyledUpArrow size={16} key=\"arrow-up\" />]\n  } else if (delta === 0) {\n    return [formattedDelta, null]\n  }\n  return [formattedDelta, <StyledDownArrow size={16} key=\"arrow-down\" />]\n}\n\nexport const ChartHeader = styled.div`\n  position: absolute;\n`\n\nexport const TokenPrice = styled.span`\n  font-size: 36px;\n  line-height: 44px;\n`\nexport const DeltaContainer = styled.div`\n  height: 16px;\n  display: flex;\n  align-items: center;\n`\nconst ArrowCell = styled.div`\n  padding-left: 2px;\n  display: flex;\n`\nexport const TimeOptionsWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\nexport const TimeOptionsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 4px;\n  gap: 4px;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  border-radius: 16px;\n  height: 40px;\n  padding: 4px;\n  width: fit-content;\n`\nconst TimeButton = styled.button<{ active: boolean }>`\n  background-color: ${({ theme, active }) => (active ? theme.backgroundInteractive : 'transparent')};\n  font-weight: 600;\n  font-size: 16px;\n  padding: 6px 12px;\n  border-radius: 12px;\n  line-height: 20px;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme, active }) => (active ? theme.textPrimary : theme.textSecondary)};\n  :hover {\n    ${({ active }) => !active && `opacity: ${OPACITY_HOVER};`}\n  }\n`\n\nfunction getTicks(startTimestamp: number, endTimestamp: number, numTicks = 5) {\n  return Array.from(\n    { length: numTicks },\n    (v, i) => endTimestamp - ((endTimestamp - startTimestamp) / (numTicks + 1)) * (i + 1)\n  )\n}\n\nfunction tickFormat(\n  startTimestamp: number,\n  endTimestamp: number,\n  timePeriod: TimePeriod,\n  locale: string\n): [TickFormatter<NumberValue>, (v: number) => string, number[]] {\n  switch (timePeriod) {\n    case TimePeriod.hour:\n      return [hourFormatter(locale), dayHourFormatter(locale), getTicks(startTimestamp, endTimestamp)]\n    case TimePeriod.day:\n      return [hourFormatter(locale), dayHourFormatter(locale), getTicks(startTimestamp, endTimestamp)]\n    case TimePeriod.week:\n      return [weekFormatter(locale), dayHourFormatter(locale), getTicks(startTimestamp, endTimestamp, 6)]\n    case TimePeriod.month:\n      return [monthDayFormatter(locale), dayHourFormatter(locale), getTicks(startTimestamp, endTimestamp)]\n    case TimePeriod.year:\n      return [monthFormatter(locale), monthYearDayFormatter(locale), getTicks(startTimestamp, endTimestamp)]\n    case TimePeriod.all:\n      return [monthYearFormatter(locale), monthYearDayFormatter(locale), getTicks(startTimestamp, endTimestamp)]\n  }\n}\n\nconst margin = { top: 86, bottom: 48, crosshair: 72 }\nconst timeOptionsHeight = 44\nconst crosshairDateOverhang = 80\n\ninterface PriceChartProps {\n  width: number\n  height: number\n}\n\nexport function PriceChart({ width, height }: PriceChartProps) {\n  const [timePeriod, setTimePeriod] = useAtom(filterTimeAtom)\n  const locale = useActiveLocale()\n  const theme = useTheme()\n\n  /* TODO: Implement API calls & cache to use here */\n  const pricePoints = data[timePeriod]\n  const startingPrice = pricePoints[0]\n  const endingPrice = pricePoints[pricePoints.length - 1]\n  const initialState = { pricePoint: endingPrice, xCoordinate: null }\n  const [selected, setSelected] = useState<{ pricePoint: PricePoint; xCoordinate: number | null }>(initialState)\n\n  const graphWidth = width + crosshairDateOverhang\n  const graphHeight = height - timeOptionsHeight\n  const graphInnerHeight = graphHeight - margin.top - margin.bottom\n\n  // Defining scales\n  // x scale\n  const timeScale = scaleLinear().domain([startingPrice.timestamp, endingPrice.timestamp]).range([0, width])\n  // y scale\n  const rdScale = scaleLinear().domain(getPriceBounds(pricePoints)).range([graphInnerHeight, 0])\n\n  const handleHover = useCallback(\n    (event: Element | EventType) => {\n      const { x } = localPoint(event) || { x: 0 }\n      const x0 = timeScale.invert(x) // get timestamp from the scale\n      const index = bisect(\n        pricePoints.map((x) => x.timestamp),\n        x0,\n        1\n      )\n\n      const d0 = pricePoints[index - 1]\n      const d1 = pricePoints[index]\n      let pricePoint = d0\n\n      const hasPreviousData = d1 && d1.timestamp\n      if (hasPreviousData) {\n        pricePoint = x0.valueOf() - d0.timestamp.valueOf() > d1.timestamp.valueOf() - x0.valueOf() ? d1 : d0\n      }\n\n      setSelected({ pricePoint, xCoordinate: timeScale(pricePoint.timestamp) })\n    },\n    [timeScale, pricePoints]\n  )\n\n  const [tickFormatter, crosshairDateFormatter, ticks] = tickFormat(\n    startingPrice.timestamp,\n    endingPrice.timestamp,\n    timePeriod,\n    locale\n  )\n  const [delta, arrow] = getDelta(startingPrice.value, selected.pricePoint.value)\n  const crosshairEdgeMax = width * 0.97\n  const crosshairAtEdge = !!selected.xCoordinate && selected.xCoordinate > crosshairEdgeMax\n\n  return (\n    <>\n      <ChartHeader>\n        <TokenPrice>${selected.pricePoint.value.toFixed(2)}</TokenPrice>\n        <DeltaContainer>\n          {delta}\n          <ArrowCell>{arrow}</ArrowCell>\n        </DeltaContainer>\n      </ChartHeader>\n      <LineChart\n        data={pricePoints}\n        getX={(p: PricePoint) => timeScale(p.timestamp)}\n        getY={(p: PricePoint) => rdScale(p.value)}\n        marginTop={margin.top}\n        /* Default curve doesn't look good for the ALL chart */\n        curve={timePeriod === TimePeriod.all ? curveBasis : undefined}\n        strokeWidth={2}\n        width={graphWidth}\n        height={graphHeight}\n      >\n        {selected.xCoordinate !== null ? (\n          <g>\n            <AxisBottom\n              scale={timeScale}\n              stroke={theme.backgroundOutline}\n              tickFormat={tickFormatter}\n              tickStroke={theme.backgroundOutline}\n              tickLength={4}\n              tickTransform={'translate(0 -5)'}\n              tickValues={ticks}\n              top={graphHeight - 1}\n              tickLabelProps={() => ({\n                fill: theme.textSecondary,\n                fontSize: 12,\n                textAnchor: 'middle',\n                transform: 'translate(0 -24)',\n              })}\n            />\n            <text\n              x={selected.xCoordinate + (crosshairAtEdge ? -4 : 4)}\n              y={margin.crosshair + 10}\n              textAnchor={crosshairAtEdge ? 'end' : 'start'}\n              fontSize={12}\n              fill={theme.textSecondary}\n            >\n              {crosshairDateFormatter(selected.pricePoint.timestamp)}\n            </text>\n            <Line\n              from={{ x: selected.xCoordinate, y: margin.crosshair }}\n              to={{ x: selected.xCoordinate, y: graphHeight }}\n              stroke={theme.backgroundOutline}\n              strokeWidth={1}\n              pointerEvents=\"none\"\n              strokeDasharray=\"4,4\"\n            />\n            <GlyphCircle\n              left={selected.xCoordinate}\n              top={rdScale(selected.pricePoint.value) + margin.top}\n              size={50}\n              fill={theme.accentActive}\n              stroke={theme.backgroundOutline}\n              strokeWidth={2}\n            />\n          </g>\n        ) : (\n          <AxisBottom scale={timeScale} stroke={theme.backgroundOutline} top={graphHeight - 1} hideTicks />\n        )}\n        <rect\n          x={0}\n          y={0}\n          width={width}\n          height={graphHeight}\n          fill={'transparent'}\n          onTouchStart={handleHover}\n          onTouchMove={handleHover}\n          onMouseMove={handleHover}\n          onMouseLeave={() => setSelected(initialState)}\n        />\n      </LineChart>\n      <TimeOptionsWrapper>\n        <TimeOptionsContainer>\n          {TIME_DISPLAYS.map(([value, display]) => (\n            <TimeButton key={display} active={timePeriod === value} onClick={() => setTimePeriod(value)}>\n              {display}\n            </TimeButton>\n          ))}\n        </TimeOptionsContainer>\n      </TimeOptionsWrapper>\n    </>\n  )\n}\n\nexport default PriceChart\n","import { darken } from 'polished'\nimport styled from 'styled-components/macro'\nimport { ExternalLink } from 'theme'\n\nconst ResourceLink = styled(ExternalLink)`\n  display: flex;\n  color: ${({ theme }) => theme.accentAction};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  gap: 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.accentAction)};\n    text-decoration: none;\n  }\n`\nexport default function Resource({ name, link }: { name: string; link: string }) {\n  return (\n    <ResourceLink href={link}>\n      {name}\n      <sup>↗</sup>\n    </ResourceLink>\n  )\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgShare(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 22,\n    height: 22,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4m14-7-5-5-5 5m5-5v12\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShare);\nexport default __webpack_public_path__ + \"static/media/share.7fdfa202.svg\";\nexport { ForwardRef as ReactComponent };","import { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useRef } from 'react'\nimport { Twitter } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { useTheme } from 'styled-components/macro'\nimport { ClickableStyle, CopyHelperRefType, OPACITY_CLICK, Z_INDEX } from 'theme'\nimport { colors } from 'theme/colors'\nimport { opacify } from 'theme/utils'\n\nimport { ReactComponent as ShareIcon } from '../../../assets/svg/share.svg'\nimport { CopyHelper } from '../../../theme'\n\nconst TWITTER_WIDTH = 560\nconst TWITTER_HEIGHT = 480\n\nconst ShareButtonDisplay = styled.div`\n  display: flex;\n  position: relative;\n`\n\nconst Share = styled(ShareIcon)<{ open: boolean }>`\n  stroke: ${({ theme }) => theme.textSecondary};\n  height: 24px;\n  width: 24px;\n  ${ClickableStyle}\n  ${({ open }) => open && `opacity: ${OPACITY_CLICK} !important`};\n`\n\nconst ShareActions = styled.div`\n  position: absolute;\n  z-index: ${Z_INDEX.dropdown};\n  width: 240px;\n  top: 36px;\n  right: 0px;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 8px;\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  border: 0.5px solid ${({ theme }) => theme.backgroundOutline};\n  box-shadow: ${({ theme }) => theme.flyoutDropShadow};\n  border-radius: 12px;\n`\nconst ShareAction = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 400;\n  gap: 12px;\n  height: 40px;\n  color: ${({ theme }) => theme.textPrimary};\n  cursor: pointer;\n  :hover {\n    background-color: ${({ theme }) => opacify(10, theme.darkMode ? colors.gray200 : colors.gray300)};\n  }\n`\n\ninterface TokenInfo {\n  tokenName: string\n  tokenSymbol: string\n}\n\nexport default function ShareButton(tokenInfo: TokenInfo) {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.SHARE)\n  const toggleShare = useToggleModal(ApplicationModal.SHARE)\n  useOnClickOutside(node, open ? toggleShare : undefined)\n  const positionX = (window.screen.width - TWITTER_WIDTH) / 2\n  const positionY = (window.screen.height - TWITTER_HEIGHT) / 2\n\n  const shareTweet = () => {\n    toggleShare()\n    window.open(\n      `https://twitter.com/intent/tweet?text=Check%20out%20${tokenInfo.tokenName}%20(${tokenInfo.tokenSymbol})%20https://app.uniswap.org/%23/tokens/${tokenInfo.tokenSymbol}%20via%20@uniswap`,\n      'newwindow',\n      `left=${positionX}, top=${positionY}, width=${TWITTER_WIDTH}, height=${TWITTER_HEIGHT}`\n    )\n  }\n\n  const copyHelperRef = useRef<CopyHelperRefType>(null)\n\n  return (\n    <ShareButtonDisplay ref={node}>\n      <Share onClick={toggleShare} aria-label={`ShareOptions`} open={open} />\n      {open && (\n        <ShareActions>\n          <ShareAction onClick={() => copyHelperRef.current?.forceCopy()}>\n            <CopyHelper\n              link\n              color={theme.textPrimary}\n              iconPosition=\"left\"\n              toCopy={window.location.href}\n              ref={copyHelperRef}\n            >\n              Copy Link\n            </CopyHelper>\n          </ShareAction>\n\n          <ShareAction onClick={shareTweet}>\n            <Twitter color={theme.textPrimary} size={20} strokeWidth={1.5} />\n            Share to Twitter\n          </ShareAction>\n        </ShareActions>\n      )}\n    </ShareButtonDisplay>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ParentSize } from '@visx/responsive'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport PriceChart from 'components/Tokens/TokenDetails/PriceChart'\nimport { VerifiedIcon } from 'components/TokenSafety/TokenSafetyIcon'\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { checkWarning } from 'constants/tokenSafety'\nimport { useCurrency, useIsUserAddedToken, useToken } from 'hooks/Tokens'\nimport { useAtomValue } from 'jotai/utils'\nimport { useCallback } from 'react'\nimport { useState } from 'react'\nimport { ArrowLeft, Heart } from 'react-feather'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { ClickableStyle, CopyContractAddress } from 'theme'\n\nimport { favoritesAtom, useToggleFavorite } from '../state'\nimport { ClickFavorited } from '../TokenTable/TokenRow'\nimport Resource from './Resource'\nimport ShareButton from './ShareButton'\n\nexport const AboutSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 24px 0px;\n`\nexport const AboutHeader = styled.span`\n  font-size: 28px;\n  line-height: 36px;\n`\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  line-height: 20px;\n  align-items: center;\n  gap: 4px;\n  text-decoration: none;\n  margin-bottom: 16px;\n\n  &:hover {\n    color: ${({ theme }) => theme.textTertiary};\n  }\n`\nexport const ChartHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.textPrimary};\n  gap: 4px;\n  margin-bottom: 24px;\n`\nconst ContractAddress = styled.button`\n  display: flex;\n  color: ${({ theme }) => theme.textPrimary};\n  gap: 10px;\n  align-items: center;\n  background: transparent;\n  border: none;\n  padding: 0px;\n  cursor: pointer;\n`\nexport const ContractAddressSection = styled.div`\n  padding: 24px 0px;\n`\nconst Contract = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  gap: 4px;\n`\nexport const ChartContainer = styled.div`\n  display: flex;\n  height: 436px;\n  align-items: center;\n`\nexport const Stat = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  min-width: 168px;\n  flex: 1;\n  gap: 4px;\n  padding: 24px 0px;\n`\nconst StatPrice = styled.span`\n  font-size: 28px;\n  color: ${({ theme }) => theme.textPrimary};\n`\nexport const StatsSection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\nexport const StatPair = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n`\nexport const TokenNameCell = styled.div`\n  display: flex;\n  gap: 8px;\n  font-size: 20px;\n  line-height: 28px;\n  align-items: center;\n`\nconst TokenActions = styled.div`\n  display: flex;\n  gap: 16px;\n  color: ${({ theme }) => theme.textSecondary};\n`\nexport const TokenInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst TokenSymbol = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\nexport const TopArea = styled.div`\n  max-width: 832px;\n`\nexport const ResourcesContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`\nconst NetworkBadge = styled.div<{ networkColor?: string; backgroundColor?: string }>`\n  border-radius: 5px;\n  padding: 4px 8px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 12px;\n  color: ${({ theme, networkColor }) => networkColor ?? theme.textPrimary};\n  background-color: ${({ theme, backgroundColor }) => backgroundColor ?? theme.backgroundSurface};\n`\nconst FavoriteIcon = styled(Heart)<{ isFavorited: boolean }>`\n  ${ClickableStyle}\n  height: 22px;\n  width: 24px;\n  color: ${({ isFavorited, theme }) => (isFavorited ? theme.accentAction : theme.textSecondary)};\n  fill: ${({ isFavorited, theme }) => (isFavorited ? theme.accentAction : 'transparent')};\n`\n\nexport default function LoadedTokenDetail({ address }: { address: string }) {\n  const token = useToken(address)\n  const currency = useCurrency(address)\n  const favoriteTokens = useAtomValue<string[]>(favoritesAtom)\n  const isFavorited = favoriteTokens.includes(address)\n  const toggleFavorite = useToggleFavorite(address)\n  const warning = checkWarning(address)\n  const navigate = useNavigate()\n  const isUserAddedToken = useIsUserAddedToken(token)\n  const [warningModalOpen, setWarningModalOpen] = useState(!!warning && !isUserAddedToken)\n\n  const handleDismissWarning = useCallback(() => {\n    setWarningModalOpen(false)\n  }, [setWarningModalOpen])\n  const chainInfo = getChainInfo(token?.chainId)\n  const networkLabel = chainInfo?.label\n  const networkBadgebackgroundColor = chainInfo?.backgroundColor\n\n  // catch token error and loading state\n  if (!token || !token.name || !token.symbol) {\n    return <div>No Token</div>\n  }\n  const tokenName = token.name\n  const tokenSymbol = token.symbol\n\n  // TODO: format price, add sparkline\n  const aboutToken =\n    'Ethereum is a decentralized computing platform that uses ETH (Ether) to pay transaction fees (gas). Developers can use Ethereum to run decentralized applications (dApps) and issue new crypto assets, known as Ethereum tokens.'\n  const tokenMarketCap = '23.02B'\n  const tokenVolume = '1.6B'\n\n  return (\n    <TopArea>\n      <BreadcrumbNavLink to=\"/explore\">\n        <ArrowLeft size={14} /> Explore\n      </BreadcrumbNavLink>\n      <ChartHeader>\n        <TokenInfoContainer>\n          <TokenNameCell>\n            <CurrencyLogo currency={currency} size={'32px'} />\n            {tokenName} <TokenSymbol>{tokenSymbol}</TokenSymbol>\n            {!warning && <VerifiedIcon size=\"20px\" />}\n            {networkBadgebackgroundColor && (\n              <NetworkBadge networkColor={chainInfo?.color} backgroundColor={networkBadgebackgroundColor}>\n                {networkLabel}\n              </NetworkBadge>\n            )}\n          </TokenNameCell>\n          <TokenActions>\n            <ShareButton tokenName={tokenName} tokenSymbol={tokenSymbol} />\n            <ClickFavorited onClick={toggleFavorite}>\n              <FavoriteIcon isFavorited={isFavorited} />\n            </ClickFavorited>\n          </TokenActions>\n        </TokenInfoContainer>\n        <ChartContainer>\n          <ParentSize>{({ width, height }) => <PriceChart width={width} height={height} />}</ParentSize>\n        </ChartContainer>\n      </ChartHeader>\n      <AboutSection>\n        <AboutHeader>\n          <Trans>About</Trans>\n        </AboutHeader>\n        {aboutToken}\n        <ResourcesContainer>\n          <Resource name={'Etherscan'} link={'https://etherscan.io/'} />\n          <Resource name={'Protocol Info'} link={`https://info.uniswap.org/#/tokens/${address}`} />\n        </ResourcesContainer>\n      </AboutSection>\n      <StatsSection>\n        <StatPair>\n          <Stat>\n            Market cap<StatPrice>${tokenMarketCap}</StatPrice>\n          </Stat>\n          <Stat>\n            {/* TODO: connect to chart's selected time */}\n            24H volume\n            <StatPrice>${tokenVolume}</StatPrice>\n          </Stat>\n        </StatPair>\n        <StatPair>\n          <Stat>\n            52W low\n            <StatPrice>$1,790.01</StatPrice>\n          </Stat>\n          <Stat>\n            52W high\n            <StatPrice>$4,420.71</StatPrice>\n          </Stat>\n        </StatPair>\n      </StatsSection>\n      <ContractAddressSection>\n        <Contract>\n          Contract Address\n          <ContractAddress>\n            <CopyContractAddress address={address} />\n          </ContractAddress>\n        </Contract>\n      </ContractAddressSection>\n      <TokenSafetyModal\n        isOpen={warningModalOpen}\n        tokenAddress={address}\n        onCancel={() => navigate(-1)}\n        onContinue={handleDismissWarning}\n      />\n    </TopArea>\n  )\n}\n","import styled, { useTheme } from 'styled-components/macro'\n\nimport { LoadingBubble } from '../loading'\nimport { DeltaContainer, TokenPrice } from './PriceChart'\nimport {\n  AboutHeader,\n  AboutSection,\n  BreadcrumbNavLink,\n  ChartContainer,\n  ChartHeader,\n  ContractAddressSection,\n  ResourcesContainer,\n  Stat,\n  StatPair,\n  StatsSection,\n  TokenInfoContainer,\n  TokenNameCell,\n  TopArea,\n} from './TokenDetail'\n\nconst LoadingChartContainer = styled(ChartContainer)`\n  height: 336px;\n  overflow: hidden;\n`\n\n/* Loading state bubbles */\nconst LoadingDetailBubble = styled(LoadingBubble)`\n  height: 16px;\n  width: 180px;\n`\nconst TitleLoadingBubble = styled(LoadingDetailBubble)`\n  width: 140px;\n`\nconst SquareLoadingBubble = styled(LoadingDetailBubble)`\n  height: 32px;\n  border-radius: 8px;\n  margin-top: 4px;\n`\nconst PriceLoadingBubble = styled(SquareLoadingBubble)`\n  height: 40px;\n`\nconst LongLoadingBubble = styled(LoadingDetailBubble)`\n  width: 100%;\n`\nconst HalfLoadingBubble = styled(LoadingDetailBubble)`\n  width: 50%;\n`\nconst IconLoadingBubble = styled(LoadingDetailBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\nconst StatLoadingBubble = styled(SquareLoadingBubble)`\n  width: 116px;\n`\nconst StatsLoadingContainer = styled.div`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n`\nconst ChartAnimation = styled.div`\n  display: flex;\n  animation: wave 8s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;\n  overflow: hidden;\n\n  @keyframes wave {\n    0% {\n      margin-left: 0;\n    }\n    100% {\n      margin-left: -800px;\n    }\n  }\n`\nconst Space = styled.div<{ heightSize: number }>`\n  height: ${({ heightSize }) => `${heightSize}px`};\n`\n\nfunction Wave() {\n  const theme = useTheme()\n  return (\n    <svg width=\"416\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M 0 80 Q 104 10, 208 80 T 416 80\" stroke={theme.backgroundOutline} fill=\"transparent\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\n/* Loading State: row component with loading bubbles */\nexport default function LoadingTokenDetail() {\n  return (\n    <TopArea>\n      <BreadcrumbNavLink to=\"/explore\">\n        <Space heightSize={20} />\n      </BreadcrumbNavLink>\n      <ChartHeader>\n        <TokenInfoContainer>\n          <TokenNameCell>\n            <IconLoadingBubble />\n            <TitleLoadingBubble />\n          </TokenNameCell>\n        </TokenInfoContainer>\n        <TokenPrice>\n          <PriceLoadingBubble />\n        </TokenPrice>\n        <DeltaContainer>\n          <Space heightSize={20} />\n        </DeltaContainer>\n        <LoadingChartContainer>\n          <div>\n            <ChartAnimation>\n              <Wave />\n              <Wave />\n              <Wave />\n              <Wave />\n              <Wave />\n            </ChartAnimation>\n          </div>\n        </LoadingChartContainer>\n        <Space heightSize={32} />\n      </ChartHeader>\n      <AboutSection>\n        <AboutHeader>\n          <SquareLoadingBubble />\n        </AboutHeader>\n        <LongLoadingBubble />\n        <LongLoadingBubble />\n        <HalfLoadingBubble />\n\n        <ResourcesContainer>{null}</ResourcesContainer>\n      </AboutSection>\n      <StatsSection>\n        <StatsLoadingContainer>\n          <StatPair>\n            <Stat>\n              <HalfLoadingBubble />\n              <StatLoadingBubble />\n            </Stat>\n            <Stat>\n              <HalfLoadingBubble />\n              <StatLoadingBubble />\n            </Stat>\n          </StatPair>\n          <StatPair>\n            <Stat>\n              <HalfLoadingBubble />\n              <StatLoadingBubble />\n            </Stat>\n            <Stat>\n              <HalfLoadingBubble />\n              <StatLoadingBubble />\n            </Stat>\n          </StatPair>\n        </StatsLoadingContainer>\n      </StatsSection>\n      <ContractAddressSection>{null}</ContractAddressSection>\n    </TopArea>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { getWarningCopy, TOKEN_SAFETY_ARTICLE, Warning } from 'constants/tokenSafety'\nimport { useTokenWarningColor } from 'hooks/useTokenWarningColor'\nimport { AlertOctagon, AlertTriangle } from 'react-feather'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { ExternalLink } from 'theme'\nimport { Color } from 'theme/styled'\n\nconst Label = styled.div<{ color: Color }>`\n  width: 284px;\n  padding: 12px 20px;\n  background-color: ${({ color }) => color + '1F'};\n  border-radius: 16px;\n  color: ${({ color }) => color};\n`\n\nconst TitleRow = styled.div`\n  align-items: center;\n  font-weight: 700;\n  display: inline-flex;\n`\n\nconst Title = styled(Text)`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  margin-left: 7px;\n`\n\nconst DetailsRow = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\ntype TokenWarningMessageProps = {\n  warning: Warning\n  tokenAddress: string\n}\n\nexport default function TokenWarningMessage({ warning, tokenAddress }: TokenWarningMessageProps) {\n  const color = useTokenWarningColor(warning.level)\n  const { heading, description } = getWarningCopy(warning)\n\n  return (\n    <Label color={color}>\n      <TitleRow>\n        {warning.canProceed ? <AlertTriangle size={'16px'} /> : <AlertOctagon size={'16px'} />}\n        <Title marginLeft=\"7px\">{warning.message}</Title>\n      </TitleRow>\n\n      <DetailsRow>\n        {heading && [heading, '. ']}\n        {description}\n        {tokenAddress && (\n          <ExternalLink href={TOKEN_SAFETY_ARTICLE}>\n            {' '}\n            <Trans>Learn more</Trans>\n          </ExternalLink>\n        )}\n      </DetailsRow>\n    </Label>\n  )\n}\n","import { SupportedChainId } from 'constants/chains'\nimport { isAddress } from 'ethers/lib/utils'\nimport { useEffect, useState } from 'react'\n\n// mock data relies on this wip reference:\n// https://www.notion.so/uniswaplabs/GraphQL-Schema-eebbd70635ae4acc851e2542cb5de575\n\nenum Currency {\n  USD,\n}\n\nenum TimePeriod {\n  hour = 'hour',\n  day = 'day',\n  week = 'week',\n  month = 'month',\n  year = 'year',\n  max = 'max',\n}\n\ninterface HistoricalPrice {\n  id: string\n  currency: Currency\n  priceInCurrency: number\n  timestamp: string\n}\n\ntype TokenDetailPageQueryResult = {\n  priceHistory: Partial<Record<SupportedChainId, HistoricalPrice[]>>\n  links: {\n    name: string\n    url: string\n    displayable_name: string\n  }[]\n  marketCap: number\n  volume: {\n    [TimePeriod.day]: number\n  }\n}\n\ninterface UseTokenDetailPageQueryResult {\n  data: TokenDetailPageQueryResult | null\n  error: string | null\n  loading: boolean\n}\n\nconst FAKE_TOKEN_DETAIL_PAGE_QUERY_RESULT: TokenDetailPageQueryResult = {\n  priceHistory: {\n    [SupportedChainId.MAINNET]: [\n      {\n        id: 'string',\n        currency: Currency.USD,\n        priceInCurrency: 1000,\n        timestamp: 'Sat Jul 23 2022 08:35:30 GMT-0000',\n      },\n      {\n        id: 'string',\n        currency: Currency.USD,\n        priceInCurrency: 1100,\n        timestamp: 'Sat Jul 23 2022 09:35:30 GMT-0000',\n      },\n      {\n        id: 'string',\n        currency: Currency.USD,\n        priceInCurrency: 900,\n        timestamp: 'Sat Jul 23 2022 10:35:30 GMT-0000',\n      },\n    ],\n  },\n  links: [\n    {\n      name: 'github',\n      url: 'https://github.com/JFrankfurt',\n      displayable_name: 'Github',\n    },\n    {\n      name: 'twitter',\n      url: 'https://twitter.com/JordanFrankfurt',\n      displayable_name: 'Twitter',\n    },\n  ],\n  marketCap: 1_000_000_000,\n  volume: {\n    [TimePeriod.day]: 1_000_000,\n  },\n}\n\nconst useTokenDetailPageQuery = (tokenAddress: string | undefined): UseTokenDetailPageQueryResult => {\n  const [data, setData] = useState<TokenDetailPageQueryResult | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  const fetchTokenDetails = async (addresses: string): Promise<TokenDetailPageQueryResult | void> => {\n    const waitRandom = (min: number, max: number): Promise<void> =>\n      new Promise((resolve) => setTimeout(resolve, min + Math.round(Math.random() * Math.max(0, max - min))))\n    try {\n      setLoading(true)\n      setError(null)\n      await waitRandom(250, 2000)\n      if (Math.random() < 0.05) {\n        throw new Error('fake error')\n      }\n      console.log('fetchTokenDetails', addresses)\n      return FAKE_TOKEN_DETAIL_PAGE_QUERY_RESULT\n    } catch (e) {\n      setError('something went wrong')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (tokenAddress && isAddress(tokenAddress)) {\n      setLoading(true)\n      setError(null)\n      fetchTokenDetails(tokenAddress)\n        .then((data) => {\n          if (data) setData(data)\n        })\n        .catch((e) => setError(e))\n        .finally(() => setLoading(false))\n    }\n  }, [tokenAddress])\n\n  return { data, error, loading }\n}\n\nexport default useTokenDetailPageQuery\n","import { colors } from './colors'\n\nexport const LIGHT_THEME = {\n  // surface\n  container: '#EDEFF7',\n  interactive: '#EDEFF7',\n  module: '#E1E4EE',\n  accent: colors.pink400,\n  dialog: '#E1E4EE',\n  // text\n  primary: colors.gray900,\n  secondary: colors.gray500,\n  onInteractive: colors.gray900,\n  // state\n  success: colors.green400,\n  warning: colors.gold200,\n  error: colors.red400,\n}\nexport const DARK_THEME = {\n  // surface\n  container: colors.gray900,\n  interactive: 'rgba(153, 161, 189, 0.08)',\n  module: '#191D27',\n  accent: colors.blue400,\n  dialog: '#191D27',\n  // text\n  primary: colors.white,\n  secondary: colors.gray300,\n  onInteractive: colors.white,\n  // state\n  success: colors.greenVibrant,\n  warning: colors.gold200,\n  error: colors.red400,\n}\n","import { SupportedChainId } from 'constants/chains'\nimport { RPC_URLS } from 'constants/networks'\n\nexport const ROUTER_URL = 'https://api.uniswap.org/v1/'\nexport const RPC_URL_MAP = Object.keys(RPC_URLS).reduce(\n  (acc, cur) => ({ ...acc, [cur]: [RPC_URLS[cur as unknown as SupportedChainId]] }),\n  {}\n)\n","import { SwapWidget } from '@uniswap/widgets'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  LARGE_MEDIA_BREAKPOINT,\n  MAX_WIDTH_MEDIA_BREAKPOINT,\n  MOBILE_MEDIA_BREAKPOINT,\n  SMALL_MEDIA_BREAKPOINT,\n} from 'components/Tokens/constants'\nimport BalanceSummary from 'components/Tokens/TokenDetails/BalanceSummary'\nimport FooterBalanceSummary from 'components/Tokens/TokenDetails/FooterBalanceSummary'\nimport LoadingTokenDetail from 'components/Tokens/TokenDetails/LoadingTokenDetail'\nimport NetworkBalance from 'components/Tokens/TokenDetails/NetworkBalance'\nimport TokenDetail from 'components/Tokens/TokenDetails/TokenDetail'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { L1_CHAIN_IDS, L2_CHAIN_IDS, SupportedChainId, TESTNET_CHAIN_IDS } from 'constants/chains'\nimport { checkWarning } from 'constants/tokenSafety'\nimport { useToken } from 'hooks/Tokens'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { useNetworkTokenBalances } from 'hooks/useNetworkTokenBalances'\nimport useTokenDetailPageQuery from 'hooks/useTokenDetailPageQuery'\nimport { useCallback, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useIsDarkMode } from 'state/user/hooks'\nimport styled from 'styled-components/macro'\nimport { DARK_THEME, LIGHT_THEME } from 'theme/token-details-widget-theme'\nimport { ROUTER_URL, RPC_URL_MAP } from 'utils/token-details-widget-config'\n\nconst WIDGET_WIDTH = 320\nconst Footer = styled.div`\n  display: none;\n  @media only screen and (max-width: ${LARGE_MEDIA_BREAKPOINT}) {\n    display: flex;\n  }\n`\nconst TokenDetailsLayout = styled.div`\n  display: flex;\n  gap: 80px;\n  padding: 0px 20px;\n  width: 100%;\n  justify-content: center;\n\n  @media only screen and (max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT}) {\n    gap: 40px;\n  }\n  @media only screen and (max-width: ${SMALL_MEDIA_BREAKPOINT}) {\n    padding: 0px 16px;\n  }\n  @media only screen and (max-width: ${MOBILE_MEDIA_BREAKPOINT}) {\n    padding: 0px 8px;\n  }\n`\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: ${WIDGET_WIDTH}px;\n\n  @media only screen and (max-width: ${LARGE_MEDIA_BREAKPOINT}) {\n    display: none;\n  }\n`\n\nfunction NetworkBalances(tokenAddress: string) {\n  return useNetworkTokenBalances({ address: tokenAddress })\n}\n\nexport default function TokenDetails() {\n  const { tokenAddress } = useParams<{ tokenAddress?: string }>()\n  const { loading } = useTokenDetailPageQuery(tokenAddress)\n  const tokenSymbol = useToken(tokenAddress)?.symbol\n\n  const darkMode = useIsDarkMode()\n  const widgetTheme = useMemo(() => (darkMode ? DARK_THEME : LIGHT_THEME), [darkMode])\n  const locale = useActiveLocale()\n  const onTxSubmit = useCallback(() => {\n    console.log('onTxSubmit')\n  }, [])\n  const onTxSuccess = useCallback(() => {\n    console.log('onTxSuccess')\n  }, [])\n  const onTxFail = useCallback(() => {\n    console.log('onTxFail')\n  }, [])\n\n  let tokenDetail\n  if (!tokenAddress) {\n    // TODO: handle no address / invalid address cases\n    tokenDetail = 'invalid token'\n  } else if (loading) {\n    tokenDetail = <LoadingTokenDetail />\n  } else {\n    tokenDetail = <TokenDetail address={tokenAddress} />\n  }\n\n  const tokenWarning = tokenAddress ? checkWarning(tokenAddress) : null\n  /* network balance handling */\n\n  const { data: networkData } = tokenAddress ? NetworkBalances(tokenAddress) : { data: null }\n  const { chainId: connectedChainId, provider } = useWeb3React()\n  const totalBalance = 4.3 // dummy data\n\n  const chainsToList = useMemo(() => {\n    let chainIds = [...L1_CHAIN_IDS, ...L2_CHAIN_IDS]\n    const userConnectedToATestNetwork = connectedChainId && TESTNET_CHAIN_IDS.includes(connectedChainId)\n    if (!userConnectedToATestNetwork) {\n      chainIds = chainIds.filter((id) => !(TESTNET_CHAIN_IDS as unknown as SupportedChainId[]).includes(id))\n    }\n    return chainIds\n  }, [connectedChainId])\n\n  const balancesByNetwork = networkData\n    ? chainsToList.map((chainId) => {\n        const amount = networkData[chainId]\n        const fiatValue = amount // for testing purposes\n        if (!fiatValue || !tokenSymbol) return null\n        const chainInfo = getChainInfo(chainId)\n        const networkColor = chainInfo.color\n        if (!chainInfo) return null\n        return (\n          <NetworkBalance\n            key={chainId}\n            logoUrl={chainInfo.logoUrl}\n            balance={'1'}\n            tokenSymbol={tokenSymbol}\n            fiatValue={fiatValue.toSignificant(2)}\n            label={chainInfo.label}\n            networkColor={networkColor}\n          />\n        )\n      })\n    : null\n\n  return (\n    <TokenDetailsLayout>\n      {tokenDetail}\n      {tokenAddress && (\n        <>\n          <RightPanel>\n            <SwapWidget\n              defaultChainId={connectedChainId}\n              defaultInputTokenAddress={'NATIVE'}\n              defaultOutputTokenAddress={tokenAddress}\n              hideConnectionUI\n              jsonRpcUrlMap={RPC_URL_MAP}\n              locale={locale}\n              onTxSubmit={onTxSubmit}\n              onTxSuccess={onTxSuccess}\n              onTxFail={onTxFail}\n              provider={provider}\n              routerUrl={ROUTER_URL}\n              theme={widgetTheme}\n              // tokenList={[]}\n              width={WIDGET_WIDTH}\n            />\n            {tokenWarning && <TokenSafetyMessage tokenAddress={tokenAddress} warning={tokenWarning} />}\n            {!loading && (\n              <BalanceSummary address={tokenAddress} totalBalance={totalBalance} networkBalances={balancesByNetwork} />\n            )}\n          </RightPanel>\n          <Footer>\n            {!loading && (\n              <FooterBalanceSummary\n                address={tokenAddress}\n                totalBalance={totalBalance}\n                networkBalances={balancesByNetwork}\n              />\n            )}\n          </Footer>\n        </>\n      )}\n    </TokenDetailsLayout>\n  )\n}\n"],"sourceRoot":""}